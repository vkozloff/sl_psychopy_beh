for (t in list_tasks){
if (t=="LSL"){
modality <- append (modality, "linguistic")}
if (t=="VSL")
{modality <- append (modality, "non-linguistic")}
part_id <- append(part_id, id)
domain <- append(domain, "visual")
task <- append(task, as.character(t))
accuracy <- append(accuracy, round(mean(visual_data_frame[ which(visual_data_frame$PartID==id
& visual_data_frame$task== t), ]$key_resp.corr), digits =3))
}
}
visual_accuracies <- data.frame(part_id, task, domain, modality, accuracy)
#  4_RUNS ACCURACY ANALYSIS
#  Violet Kozloff
#  April 7, 2018
#  This script analyzes structured and random blocks across four tasks: auditory (speech and tones) and visual (letters and images).
#  It measures the mean reaction time and the slope of the reaction time for each participant for each condition.
#  It also runs an ANOVA to compare reaction time slope between tasks, modalities, and domains.
# NOTE: f002_auditory_6 has been modified to reflect the correct participant id
# NOTE: Does not remove points outside 2.5 stdev of mean
# NOTE: relevant columns pre-selected through this experiment's version of fmri_data_cleaning.Rmd
#  ****************************************************************************
# ******************** I. PREPARE FILES *************************
# Prepare workspace ------------------------------------------------------------------------------------------------------
# Move to folder from GitHub (Mac when folder is on desktop)
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/accuracy/4_runs/scripts")
# Remove objects in environment
rm(list=ls())
# Prepare paths for files --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#For use on Mac
auditory_path <- ("../cleaned_data/auditory/")
visual_path <- ("../cleaned_data/visual/")
# List auditory and visual files---------------------------------------------------------------------------------------------------------------------------------------------------------------------
afiles <- list.files(path=auditory_path, pattern="*.csv")
vfiles <- list.files(path=visual_path, pattern = ".csv")
#Remove the underscores in file names
auditory_files <- gsub("_", "", afiles)
visual_files <- gsub("_", "", vfiles)
# Read in auditory files and combine them into one data frame--------------------------------------------------------------------------------------------------------------------------------------------
# Prepare auditory_data_frame to hold the files you're reading in
auditory_data_frame<-list()
# Remove the dashes in each file name read it in
for(auditory_file in afiles)
{
assign(
gsub("_", "", auditory_file),
read.csv(paste(auditory_path, auditory_file, sep="")))
}
# Combine each file with the previous files into auditory_data_frame
for (afile in auditory_files){auditory_data_frame <- append(auditory_data_frame, list(eval(parse(text=afile))))}
auditory_data_frame <- do.call(rbind.data.frame, auditory_data_frame)
# Prepare auditory files for use----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Rename expName column as "domain"
names(auditory_data_frame)[names(auditory_data_frame) == 'expName'] <- 'domain'
# Read in visual files and combine them into one data frame------------------------------------------------------------------------------------------------------
# Prepare visual_data_frame to hold the files you're reading in
visual_data_frame <- data.frame()
visual_data_frame<-list()
# Remove the dashes from each file name and read it in
for(visual_file in vfiles)
{
assign(
gsub("_", "", visual_file),
read.csv(paste(visual_path, visual_file, sep="")))
}
#Combine the visual files into visual_data_frame
for (vfile in visual_files){visual_data_frame <- append(visual_data_frame, list(eval(parse(text=vfile))))}
visual_data_frame <- do.call(rbind.data.frame, visual_data_frame)
# Rename expName column as 'domain'
names(visual_data_frame)[names(visual_data_frame) == 'expName'] <- 'domain'
# ******************** II. FIND AUDITORY ACCURACY *************************
# Auditory: Create a single data frame with each participant's accuracy for each condition-----------------------------------------------------------------------------------------------------
# List unique participant IDs for this condition
list_part_id <- unique(auditory_data_frame$PartID)
# List unique tasks for this condition
list_tasks <- lapply(unique(auditory_data_frame$task), as.character)
# Separate SSL and TSL
ssl <- (auditory_data_frame[ which(auditory_data_frame$task=="SSL"),])
tsl <- (auditory_data_frame[ which(auditory_data_frame$task=="TSL"),])
# Set up data frame to hold accuracies
accuracy <- NULL
part_id <- NULL
domain <- NULL
modality <- NULL
type <- NULL
task<- NULL
# auditory_data_frame$accuracy <- as.factor(auditory_data_frame$accuracy)
# For each participant, extract id
# Assign domain, type, and modality
# Calculate and record mean_rt, rt_slope, upper bound, and lower bound
for(id in list_part_id){
for (t in list_tasks){
if (t=="SSL"){
modality <- append (modality, "linguistic")}
if (t=="TSL")
{modality <- append (modality, "non-linguistic")}
part_id <- append(part_id, id)
domain <- append(domain, "auditory")
task <- append(task, as.character(t))
accuracy <- append(accuracy, round(mean(auditory_data_frame[ which(auditory_data_frame$PartID==id
& auditory_data_frame$task== t), ]$key_resp.corr), digits =3))
}
}
# Combine data for each participant
indiv_auditory_accuracies <- data.frame(part_id, task, domain, modality, accuracy)
# ******************** III. FIND VISUAL ACCURACY *************************
# visual: Create a single data frame with each participant's accuracy for each condition-----------------------------------------------------------------------------------------------------
# List unique participant IDs for this condition
list_part_id <- unique(visual_data_frame$PartID)
# List unique tasks for this condition
list_tasks <- lapply(unique(visual_data_frame$task), as.character)
# Separate lsl and vsl
lsl <- (visual_data_frame[ which(visual_data_frame$task=="lsl"),])
vsl <- (visual_data_frame[ which(visual_data_frame$task=="vsl"),])
# Set up data frame to hold accuracies
accuracy <- NULL
part_id <- NULL
domain <- NULL
modality <- NULL
type <- NULL
task<- NULL
# visual_data_frame$accuracy <- as.factor(visual_data_frame$accuracy)
# For each participant, extract id
# Assign domain, type, and modality
# Calculate and record mean_rt, rt_slope, upper bound, and lower bound
for(id in list_part_id){
for (t in list_tasks){
if (t=="LSL"){
modality <- append (modality, "linguistic")}
if (t=="VSL")
{modality <- append (modality, "non-linguistic")}
part_id <- append(part_id, id)
domain <- append(domain, "visual")
task <- append(task, as.character(t))
accuracy <- append(accuracy, round(mean(visual_data_frame[ which(visual_data_frame$PartID==id
& visual_data_frame$task== t), ]$key_resp.corr), digits =3))
}
}
# Combine data for each participant
indiv_visual_accuracies <- data.frame(part_id, task, domain, modality, accuracy)
# Combine individual visual and auditory accuracies into one data frame
indiv_accuracies <- data.frame(rbind(indiv_auditory_accuracies, indiv_visual_accuracies))
# Write individual accuracies to output file
setwd("../output_files/")
write.csv(indiv_accuracies, "4_runs_pilot_accuracy_indiv.csv")
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
auditory_input_path <- "../original_data/auditory/"
auditory_files <- list.files(path=auditory_input_path, pattern="*.csv")
auditory_output_path <- "../cleaned_data/auditory/"
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
for (file in auditory_files)
{
auditory_cleaning(paste0(auditory_input_path,file))
}
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
auditory_input_path <- ("../original_data/auditory/")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*.csv")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
auditory_input_path <- ("../original_data/auditory/")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
auditory_output_path <- "../cleaned_data/auditory/"
visual_input_path <- ("../original_data/visual/")
visual_files<- list.files(path=visual_input_path, pattern="*.csv")
old_visual_files <- list.files(path=visual_input_path, pattern="f006.csv")
new_visual_files <- list.files(path=visual_input_path, pattern="f008.csv")
visual_output_path <- "../cleaned_data/visual/"
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
rm(list=ls())
auditory_input_path <- ("../original_data/auditory/")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
auditory_output_path <- "../cleaned_data/auditory/"
visual_input_path <- ("../original_data/visual/")
visual_files<- list.files(path=visual_input_path, pattern="*.csv")
old_visual_files <- list.files(path=visual_input_path, pattern="f006.csv")
new_visual_files <- list.files(path=visual_input_path, pattern="f008.csv")
visual_output_path <- "../cleaned_data/visual/"
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
for (file in old_auditory_files)
{
auditory_cleaning(paste0(auditory_input_path,file))
}
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
auditory_input_path <- ("../original_data/auditory/")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
auditory_output_path <- "../cleaned_data/auditory/"
visual_input_path <- ("../original_data/visual/")
visual_files<- list.files(path=visual_input_path, pattern="*.csv")
old_visual_files <- list.files(path=visual_input_path, pattern="f006.csv")
new_visual_files <- list.files(path=visual_input_path, pattern="f008.csv")
visual_output_path <- "../cleaned_data/visual/"
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
for (file in old_auditory_files)
{
auditory_cleaning(paste0(auditory_input_path,file))
}
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
auditory_input_path <- ("../original_data/auditory/")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
auditory_output_path <- "../cleaned_data/auditory/"
visual_input_path <- ("../original_data/visual/")
visual_files<- list.files(path=visual_input_path, pattern="*.csv")
old_visual_files <- list.files(path=visual_input_path, pattern="f006.csv")
new_visual_files <- list.files(path=visual_input_path, pattern="f008.csv")
visual_output_path <- "../cleaned_data/visual/"
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
for (file in old_auditory_files)
{
auditory_cleaning(paste0(auditory_input_path,file))
}
old_auditory_files <- old_auditory_files[1,2,3,4]
old_auditory_files
old_auditory_files <- list.files(path=auditory_input_path, pattern="*2.csv"|"*4.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
old_auditory_files_2 <- list.files(pattern="*2.csv")
files <- list.files(pattern = "*2.csv$")
files <- list.files(pattern = "\\*2.csv$")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*"&&"2.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*2.csv")
old_auditory_files_2 <- tail(old_auditory_files, "2.csv")
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
auditory_input_path <- ("../original_data/auditory/")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern=glob2rx("f006*2.csv"))
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*"))
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*"))
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*"))
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
old_auditory_files_2 <- tail(old_auditory_files, "2.csv")
old_auditory_files_2 <- tail(old_auditory_files, pattern="2.csv")
old_auditory_files_2 <- tail(old_auditory_files, pattern="2.csv")
old_auditory_files_4 <- tail(old_auditory_files, pattern="4.csv")
old_auditory_files <- c(old_auditory_files_2, old_auditory_files_4)
old_auditory_files
old_auditory_files_2
old_auditory_files_2 <- tail(old_auditory_files, pattern="*2.csv")
old_auditory_files_2
old_auditory_files_2 <- tail(old_auditory_files, pattern="2.csv$")
old_auditory_files_2
old_auditory_files_2 <- tail(path=auditory_input_path, pattern=glob2rx("f006*.2csv"))
old_auditory_files_2 <- list.files(path=auditory_input_path, pattern=glob2rx("f006*.2csv"))
old_auditory_files_4 <- list.files(old_auditory_files, pattern="4.csv")
old_auditory_files_2
old_auditory_files_4
old_auditory_files_4 <- tail(old_auditory_files, pattern="4.csv")
old_auditory_files_4
old_auditory_files_4 <- tail(old_auditory_files, "4.csv")
old_auditory_files_4
old_auditory_files_4 <- tail(old_auditory_files, 4.csv)
gettype(old_auditory_files)
typeof(old_auditory_files)
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
auditory_input_path <- ("../original_data/auditory/")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006*")
typeof(old_auditory_files)
old_auditory_files_2 <- list.files(path=auditory_input_path, pattern="f006_auditory_2.csv"))
old_auditory_files_2 <- list.files(path=auditory_input_path, pattern="f006_auditory_2.csv")
old_auditory_files_4 <- list.files(path=auditory_input_path, pattern="f006_auditory_4.csv")
old_auditory_files <- c(old_auditory_files_2, old_auditory_files_4)
old_auditory_files
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
auditory_input_path <- ("../original_data/auditory/")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
old_auditory_files <- list.files(path=auditory_input_path, pattern="f006")
new_auditory_files <- list.files(path=auditory_input_path, pattern="f008*")
old_auditory_files_2 <- list.files(path=auditory_input_path, pattern="f006_auditory_2.csv")
old_auditory_files_4 <- list.files(path=auditory_input_path, pattern="f006_auditory_4.csv")
old_auditory_files <- c(old_auditory_files_2, old_auditory_files_4)
new_auditory_files_2 <- list.files(path=auditory_input_path, pattern="f008_auditory_2.csv")
new_auditory_files_4 <- list.files(path=auditory_input_path, pattern="f008_auditory_4.csv")
new_auditory_files <- c(new_auditory_files_2, new_auditory_files_4)
visual_input_path <- ("../original_data/visual/")
visual_files<- list.files(path=visual_input_path, pattern="*.csv")
old_visual_files <- list.files(path=visual_input_path, pattern="f006")
new_visual_files <- list.files(path=visual_input_path, pattern="f008*")
old_visual_files_2 <- list.files(path=visual_input_path, pattern="f006_visual_2.csv")
old_visual_files_4 <- list.files(path=visual_input_path, pattern="f006_visual_4.csv")
old_visual_files <- c(old_visual_files_2, old_visual_files_4)
new_visual_files_2 <- list.files(path=visual_input_path, pattern="f008_visual_2.csv")
new_visual_files_4 <- list.files(path=visual_input_path, pattern="f008_visual_4.csv")
new_visual_files <- c(new_visual_files_2, new_visual_files_4)
auditory_output_path <- "../cleaned_data/auditory/"
visual_output_path <- "../cleaned_data/visual/"
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
old_auditory_files <- old_auditory_files[1,2,3,4]
for (file in old_auditory_files)
{
auditory_cleaning(paste0(auditory_input_path,file))
}
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
for (file in old_auditory_files)
{
auditory_cleaning(paste0(auditory_input_path,file))
}
# CLean old format visual files --------------------------------------------------------------------------------
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.rt","l_block_trial_key_resp.keys","v_block_trial_key_resp.rt","v_block_trial_key_resp.keys","ltarget","Run","PartID","vtarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all visual files
for (file in old_visual_files)
{
visual_cleaning(paste0(visual_input_path,file))
}
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
old_auditory_input_path <- ("../original_data/auditory/old_format")
new_auditory_input_path <- ("../original_data/auditory/new_format")
old_auditory_files<- list.files(path=old_auditory_input_path, pattern="*.csv")
new_auditory_files<- list.files(path=new_auditory_input_path, pattern="*.csv")
old_visual_input_path <- ("../original_data/visual/old_format")
new_visual_input_path <- ("../original_data/visual/new_format")
old_visual_files_2<- list.files(path=old_visual_input_path, pattern="*2.csv")
old_visual_files_4<- list.files(path=old_visual_input_path, pattern="*4.csv")
old_visual_files <- c(old_visual_files_2, old_visual_files_4)
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
# Remove objects in environment
rm(list=ls())
# Set up auditory input file path
old_auditory_input_path <- ("../original_data/auditory/old_format")
new_auditory_input_path <- ("../original_data/auditory/new_format")
old_auditory_files<- list.files(path=old_auditory_input_path, pattern="*.csv")
new_auditory_files<- list.files(path=new_auditory_input_path, pattern="*.csv")
# Set up visual input file path
old_visual_input_path <- ("../original_data/visual/old_format")
new_visual_input_path <- ("../original_data/visual/new_format")
# select only files containing a trial session
old_visual_files_2<- list.files(path=old_visual_input_path, pattern="*2.csv")
old_visual_files_4<- list.files(path=old_visual_input_path, pattern="*4.csv")
old_visual_files <- c(old_visual_files_2, old_visual_files_4)
new_visual_files_2<- list.files(path=new_visual_input_path, pattern="*2.csv")
new_visual_files_4<- list.files(path=new_visual_input_path, pattern="*4.csv")
new_visual_files <- c(new_visual_files_2, new_visual_files_4)
old_visual_files
new_visual_files
# Set up auditory input file path
old_auditory_input_path <- ("../original_data/auditory/old_format")
new_auditory_input_path <- ("../original_data/auditory/new_format")
# select only files containing a trial session
old_auditory_files_2<- list.files(path=old_auditory_input_path, pattern="*2.csv")
old_auditory_files_4<- list.files(path=old_auditory_input_path, pattern="*4.csv")
old_auditory_files <- c(old_auditory_files_2, old_auditory_files_4)
new_auditory_files_2<- list.files(path=new_auditory_input_path, pattern="*2.csv")
new_auditory_files_4<- list.files(path=new_auditory_input_path, pattern="*4.csv")
new_auditory_files <- c(new_auditory_files_2, new_auditory_files_4)
old_auditory_files
new_auditory_files
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
old_auditory_input_path <- ("../original_data/auditory/old_format")
new_auditory_input_path <- ("../original_data/auditory/new_format")
old_auditory_files<- list.files(path=old_auditory_input_path, pattern="*.csv")
new_auditory_files<- list.files(path=new_auditory_input_path, pattern="*.csv")
old_auditory_input_path <- ("../original_data/auditory/old_format")
new_auditory_input_path <- ("../original_data/auditory/new_format")
old_auditory_files_2<- list.files(path=old_auditory_input_path, pattern="*2.csv")
old_auditory_files_4<- list.files(path=old_auditory_input_path, pattern="*4.csv")
old_auditory_files <- c(old_auditory_files_2, old_auditory_files_4)
new_auditory_files_2<- list.files(path=new_auditory_input_path, pattern="*2.csv")
new_auditory_files_4<- list.files(path=new_auditory_input_path, pattern="*4.csv")
new_auditory_files <- c(new_auditory_files_2, new_auditory_files_4)
old_visual_input_path <- ("../original_data/visual/old_format")
new_visual_input_path <- ("../original_data/visual/new_format")
old_visual_files_2<- list.files(path=old_visual_input_path, pattern="*2.csv")
old_visual_files_4<- list.files(path=old_visual_input_path, pattern="*4.csv")
old_visual_files <- c(old_visual_files_2, old_visual_files_4)
new_visual_files_2<- list.files(path=new_visual_input_path, pattern="*2.csv")
new_visual_files_4<- list.files(path=new_visual_input_path, pattern="*4.csv")
new_visual_files <- c(new_visual_files_2, new_visual_files_4)
auditory_output_path <- "../cleaned_data/auditory/"
visual_output_path <- "../cleaned_data/visual/"
auditory_cleaning_old <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
for (file in old_auditory_files)
{
auditory_cleaning_old(paste0(auditory_input_path,file))
}
auditory_cleaning_new <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","sound_block_key_resp.rt","sound_block_key_resp.keys","tone_block_key_resp.rt","tone_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
for (file in new_auditory_files)
for (file in new_auditory_files)
{
auditory_cleaning_new(paste0(new_auditory_input_path,file))
}
setwd("/Users/jasinskagroup/Desktop/QLAB/psychopy_sl_beh-master/rt_slope/4_runs/scripts")
rm(list=ls())
old_auditory_input_path <- ("../original_data/auditory/old_format")
new_auditory_input_path <- ("../original_data/auditory/new_format")
old_auditory_files<- list.files(path=old_auditory_input_path, pattern="*.csv")
new_auditory_files<- list.files(path=new_auditory_input_path, pattern="*.csv")
old_auditory_input_path <- ("../original_data/auditory/old_format")
new_auditory_input_path <- ("../original_data/auditory/new_format")
old_auditory_files_2<- list.files(path=old_auditory_input_path, pattern="*2.csv")
old_auditory_files_4<- list.files(path=old_auditory_input_path, pattern="*4.csv")
old_auditory_files <- c(old_auditory_files_2, old_auditory_files_4)
new_auditory_files_2<- list.files(path=new_auditory_input_path, pattern="*2.csv")
new_auditory_files_4<- list.files(path=new_auditory_input_path, pattern="*4.csv")
new_auditory_files <- c(new_auditory_files_2, new_auditory_files_4)
old_visual_input_path <- ("../original_data/visual/old_format")
new_visual_input_path <- ("../original_data/visual/new_format")
old_visual_files_2<- list.files(path=old_visual_input_path, pattern="*2.csv")
old_visual_files_4<- list.files(path=old_visual_input_path, pattern="*4.csv")
old_visual_files <- c(old_visual_files_2, old_visual_files_4)
new_visual_files_2<- list.files(path=new_visual_input_path, pattern="*2.csv")
new_visual_files_4<- list.files(path=new_visual_input_path, pattern="*4.csv")
new_visual_files <- c(new_visual_files_2, new_visual_files_4)
auditory_output_path <- "../cleaned_data/auditory/"
visual_output_path <- "../cleaned_data/visual/"
auditory_cleaning_old <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
for (file in old_auditory_files)
{
auditory_cleaning_old(paste0(auditory_input_path,file))
}
function to all auditory files
for (file in old_auditory_files)
{
auditory_cleaning_old(paste0(old_auditory_input_path,file))
}
